[1mdiff --git a/__pycache__/client3.cpython-311.pyc b/__pycache__/client3.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..80aa1a7[m
Binary files /dev/null and b/__pycache__/client3.cpython-311.pyc differ
[1mdiff --git a/client3.py b/client3.py[m
[1mindex ca310d8..d35eb78 100644[m
[1m--- a/client3.py[m
[1m+++ b/client3.py[m
[36m@@ -35,17 +35,16 @@[m [mdef getDataPoint(quote):[m
     stock = quote['stock'][m
     bid_price = float(quote['top_bid']['price'])[m
     ask_price = float(quote['top_ask']['price'])[m
[31m-    price = (bid_price + ask_price) / 2[m
[32m+[m[32m    price = (bid_price+ask_price) / 2[m
     return stock, bid_price, ask_price, price[m
 [m
 [m
 def getRatio(price_a, price_b):[m
     """ Get ratio of price_a and price_b """[m
     """ ------------- Update this function ------------- """[m
[31m-    if price_b == 0:[m
[32m+[m[32m    if price_b==0:[m
         return[m
[31m-    else:[m
[31m-        return price_a / price_b[m
[32m+[m[32m    return price_a/price_b[m
 [m
 [m
 # Main[m
[36m@@ -61,4 +60,4 @@[m [mif __name__ == "__main__":[m
             prices[stock] = price[m
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))[m
 [m
[31m-        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))[m
[32m+[m[32m        print("Ratio %s" % getRatio(price, price))[m
[1mdiff --git a/client_test.py b/client_test.py[m
[1mindex f9883dd..2291416 100644[m
[1m--- a/client_test.py[m
[1m+++ b/client_test.py[m
[36m@@ -7,16 +7,22 @@[m [mclass ClientTest(unittest.TestCase):[m
       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},[m
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}[m
     ][m
[32m+[m[32m    """ ------------ Add the assertion below ------------ """[m
     for quote in quotes:[m
[31m-      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))[m
[32m+[m[32m       self.assertEqual(getDataPoint(quote),(quote["stock"], quote["top_bid"]["price"], quote["top_ask"]["price"],(quote["top_bid"]["price"]+quote["top_ask"]["price"])/2))[m
 [m
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):[m
     quotes = [[m
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},[m
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}[m
     ][m
[32m+[m[32m    """ ------------ Add the assertion below ------------ """[m
     for quote in quotes:[m
[31m-      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))[m
[32m+[m[32m       self.assertEqual(getDataPoint(quote),(quote["stock"], quote["top_bid"]["price"], quote["top_ask"]["price"],(quote["top_bid"]["price"]+quote["top_ask"]["price"])/2))[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m  """ ------------ Add more unit tests ------------ """[m
 [m
 [m
 [m
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..f678e82[m
[1m--- /dev/null[m
[1m+++ b/requirements.txt[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mpython-dateutil==2.8.2[m
\ No newline at end of file[m
